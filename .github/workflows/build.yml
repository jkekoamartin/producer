name: Build and Push Native Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Define the full image name using your GitHub username/organization and repository name.
      IMAGE_NAME: ghcr.io/${{ github.repository }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check architecture
        run: uname -m

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      # Set up QEMU for multi-arch emulation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Option 1: Use Gradle task with platform parameter
#      - name: Build Native Docker Image
#        run: ./gradlew dockerBuild -PdockerPlatform=linux/arm64

      - name: Generate Docker Build Layers
        run: ./gradlew dockerBuildNative
#      # Option 2: Use Buildx directly (uncomment the one you want)
#      - name: Build Native Docker Image
#        run: docker buildx build --platform linux/arm64 -t producer:latest --load .

      - name: Verify Docker Image
        run: docker images  # Debugging step

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Tag Docker Image
        run: |
          docker tag producer:latest $IMAGE_NAME:latest
          docker tag producer:latest $IMAGE_NAME:${{ github.sha }}

      - name: Push Docker Image
        run: |
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.sha }}